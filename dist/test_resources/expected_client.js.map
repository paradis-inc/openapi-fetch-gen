{"version":3,"file":"expected_client.js","sourceRoot":"","sources":["../../src/test_resources/expected_client.ts"],"names":[],"mappings":";;;;;;AAGA,kEAAiE;AAGjE,MAAa,MAAM;IACA,MAAM,CAAC;IACP,cAAc,CAAK;IAEpC,YAAY,aAA4B,EAAE,cAAmB;QAC3D,IAAI,CAAC,MAAM,GAAG,IAAA,uBAAY,EAAQ,aAAa,CAAC,CAAC;QACjD,IAAI,CAAC,cAAc,GAAG,cAAc,IAAK,EAAS,CAAC;IACrD,CAAC;IAKD,KAAK,CAAC,QAAQ,CAAC,MAMd;QACC,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE;YACrC,MAAM;SACP,CAAC,CAAC;IACL,CAAC;IAKD,KAAK,CAAC,SAAS,CAAC,IAUf;QACC,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE;YACtC,IAAI;SACL,CAAC,CAAC;IACL,CAAC;IAKD,KAAK,CAAC,cAAc,CAAC,MAAoC;QACvD,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE;YAC9C,MAAM;SACP,CAAC,CAAC;IACL,CAAC;IAKD,KAAK,CAAC,cAAc,CAClB,MAAoC,EACpC,IAUkB;QAElB,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE;YAC9C,MAAM;YACN,IAAI;SACL,CAAC,CAAC;IACL,CAAC;IAKD,KAAK,CAAC,iBAAiB,CAAC,MAAoC;QAC1D,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE;YACjD,MAAM;SACP,CAAC,CAAC;IACL,CAAC;IAKD,KAAK,CAAC,gBAAgB,CACpB,MAAoC,EACpC,IAUC;QAED,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,EAAE;YAChD,MAAM;YACN,IAAI;SACL,CAAC,CAAC;IACL,CAAC;IAKD,KAAK,CAAC,mBAAmB,CAAC,MAAoC;QAC5D,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,uBAAuB,EAAE;YACpD,MAAM;SACP,CAAC,CAAC;IACL,CAAC;IAKD,KAAK,CAAC,eAAe,CAAC,IAKrB;QACC,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE;YAC7C,IAAI;SACL,CAAC,CAAC;IACL,CAAC;IAKD,KAAK,CAAC,aAAa,CAAC,IAAuB;QACzC,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE;YAC3C,IAAI;SACL,CAAC,CAAC;IACL,CAAC;IAKD,KAAK,CAAC,iBAAiB,CACrB,MA2EK;QAEL,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,qBAAqB,EAAE;YAClD,MAAM,EAAE;gBACN,GAAG,MAAM;gBACT,MAAM,EAAE,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,GAAG,MAAM,CAAC,MAAM,EAIjD;aACF;SACF,CAAC,CAAC;IACL,CAAC;CACF;AAvOD,wBAuOC","sourcesContent":["// THIS FILE IS AUTO-GENERATED BY openapi-fetch-gen.\n// DO NOT EDIT THIS FILE MANUALLY.\n// See Also: https://github.com/moznion/openapi-fetch-gen\nimport createClient, { type ClientOptions } from \"openapi-fetch\";\nimport type { components, paths } from \"./schema.d.ts\"; // generated by openapi-typescript\n\nexport class Client<HT extends Record<string, string>> {\n  private readonly client;\n  private readonly defaultHeaders: HT;\n\n  constructor(clientOptions: ClientOptions, defaultHeaders?: HT) {\n    this.client = createClient<paths>(clientOptions);\n    this.defaultHeaders = defaultHeaders ?? ({} as HT);\n  }\n\n  /**\n   * List users\n   */\n  async getUsers(params: {\n    query: {\n      page?: number;\n      pageSize?: number;\n      membershipType?: \"REGULAR\" | \"PREMIUM\" | \"STUDENT\";\n    };\n  }) {\n    return await this.client.GET(\"/users\", {\n      params,\n    });\n  }\n\n  /**\n   * Create a new user\n   */\n  async postUsers(body: {\n    name: string;\n    email: string;\n    membershipType: \"REGULAR\" | \"PREMIUM\" | \"STUDENT\";\n    address?: {\n      postalCode?: string;\n      street: string;\n      city: string;\n      country: string;\n    };\n  }) {\n    return await this.client.POST(\"/users\", {\n      body,\n    });\n  }\n\n  /**\n   * Get user details\n   */\n  async getUsersUserid(params: { path: { userId: string } }) {\n    return await this.client.GET(\"/users/{userId}\", {\n      params,\n    });\n  }\n\n  /**\n   * Replace user\n   */\n  async putUsersUserid(\n    params: { path: { userId: string } },\n    body: {\n      name: string;\n      email: string;\n      membershipType: \"REGULAR\" | \"PREMIUM\" | \"STUDENT\";\n      address?: {\n        postalCode?: string;\n        street: string;\n        city: string;\n        country: string;\n      };\n    } & { id: string },\n  ) {\n    return await this.client.PUT(\"/users/{userId}\", {\n      params,\n      body,\n    });\n  }\n\n  /**\n   * Delete user\n   */\n  async deleteUsersUserid(params: { path: { userId: string } }) {\n    return await this.client.DELETE(\"/users/{userId}\", {\n      params,\n    });\n  }\n\n  /**\n   * Update user fields\n   */\n  async patchUsersUserid(\n    params: { path: { userId: string } },\n    body: {\n      name?: string;\n      email?: string;\n      membershipType?: \"REGULAR\" | \"PREMIUM\" | \"STUDENT\";\n      address?: {\n        postalCode?: string;\n        street: string;\n        city: string;\n        country: string;\n      };\n    },\n  ) {\n    return await this.client.PATCH(\"/users/{userId}\", {\n      params,\n      body,\n    });\n  }\n\n  /**\n   * List user loans\n   */\n  async getUsersUseridLoans(params: { path: { userId: string } }) {\n    return await this.client.GET(\"/users/{userId}/loans\", {\n      params,\n    });\n  }\n\n  /**\n   * Search users\n   */\n  async postUsersSearch(body: {\n    name?: string;\n    email?: string;\n    joinedAfter?: string;\n    membershipType?: \"REGULAR\" | \"PREMIUM\" | \"STUDENT\";\n  }) {\n    return await this.client.POST(\"/users/search\", {\n      body,\n    });\n  }\n\n  /**\n   * Bulk user import\n   */\n  async postUsersBulk(body: { file?: string }) {\n    return await this.client.POST(\"/users/bulk\", {\n      body,\n    });\n  }\n\n  /**\n   * Get bulk job status\n   */\n  async getUsersBulkJobid(\n    params: [\n      Exclude<\n        // Missed Header Keys for default headers\n        keyof {\n          Authorization: string;\n          \"Application-Version\": string;\n          \"Something-Id\": string;\n        },\n        Extract<\n          // Provided header keys by default headers' keys\n          keyof HT,\n          keyof {\n            Authorization: string;\n            \"Application-Version\": string;\n            \"Something-Id\": string;\n          }\n        >\n      >,\n    ] extends [never]\n      ? {\n          header?: {\n            Authorization: string;\n            \"Application-Version\": string;\n            \"Something-Id\": string;\n          };\n          path: { jobId: string };\n        }\n      : {\n          header:\n            | (Pick<\n                // Pick the header keys that are not in the default headers\n                {\n                  Authorization: string;\n                  \"Application-Version\": string;\n                  \"Something-Id\": string;\n                },\n                Exclude<\n                  // Missed Header Keys for default headers\n                  keyof {\n                    Authorization: string;\n                    \"Application-Version\": string;\n                    \"Something-Id\": string;\n                  },\n                  Extract<\n                    // Provided header keys by default headers' keys\n                    keyof HT,\n                    keyof {\n                      Authorization: string;\n                      \"Application-Version\": string;\n                      \"Something-Id\": string;\n                    }\n                  >\n                >\n              > &\n                Partial<\n                  // Disallow default headers' keys to be in the header param\n                  Record<\n                    Extract<\n                      // Provided header keys by default headers' keys\n                      keyof HT,\n                      keyof {\n                        Authorization: string;\n                        \"Application-Version\": string;\n                        \"Something-Id\": string;\n                      }\n                    >,\n                    never\n                  >\n                >)\n            | {\n                Authorization: string;\n                \"Application-Version\": string;\n                \"Something-Id\": string;\n              };\n          path: { jobId: string };\n        },\n  ) {\n    return await this.client.GET(\"/users/bulk/{jobId}\", {\n      params: {\n        ...params,\n        header: { ...this.defaultHeaders, ...params.header } as {\n          Authorization: string;\n          \"Application-Version\": string;\n          \"Something-Id\": string;\n        },\n      },\n    });\n  }\n}\n\nexport type Error = components[\"schemas\"][\"Error\"];\nexport type User = components[\"schemas\"][\"User\"];\nexport type Address = components[\"schemas\"][\"Address\"];\nexport type UserCreate = components[\"schemas\"][\"UserCreate\"];\nexport type UserUpdate = components[\"schemas\"][\"UserUpdate\"];\nexport type UserPatch = components[\"schemas\"][\"UserPatch\"];\nexport type UserList = components[\"schemas\"][\"UserList\"];\nexport type UserPage = components[\"schemas\"][\"UserPage\"];\nexport type Loan = components[\"schemas\"][\"Loan\"];\nexport type Book = components[\"schemas\"][\"Book\"];\nexport type BulkJobStatus = components[\"schemas\"][\"BulkJobStatus\"];\nexport type ClientSchema = components[\"schemas\"][\"Client\"];\nexport type schema_Something = components[\"schemas\"][\"schema-Something\"];\n"]}