{"version":3,"file":"cli.js","sourceRoot":"","sources":["../src/cli.ts"],"names":[],"mappings":";;;;;;AAEA,sDAAyB;AACzB,0DAA6B;AAC7B,yCAAoC;AACpC,kDAA0C;AAC1C,mCAAyC;AAEzC,MAAM,OAAO,GAAG,IAAI,mBAAO,EAAE,CAAC;AAE9B,OAAO;KACJ,IAAI,CAAC,mBAAmB,CAAC;KACzB,WAAW,CACV,oEAAoE,CACrE;KACA,OAAO,CAAC,sBAAO,CAAC;KAChB,cAAc,CACb,oBAAoB,EACpB,kDAAkD,CACnD;KACA,MAAM,CACL,qBAAqB,EACrB,sCAAsC,EACtC,aAAa,CACd;KACA,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAEvB,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;AAE/B,IAAI,CAAC;IACH,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC;IAE5C,MAAM,SAAS,GAAG,mBAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IACjD,MAAM,UAAU,GAAG,mBAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEnD,MAAM,iBAAiB,GAAG,mBAAI;SAC3B,QAAQ,CAAC,mBAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC;SAC7C,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;SACnB,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;SACrB,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IAEhC,IAAI,CAAC,iBAAE,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;QAC9B,OAAO,CAAC,KAAK,CAAC,gCAAgC,SAAS,EAAE,CAAC,CAAC;QAC3D,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;IAED,MAAM,UAAU,GAAG,IAAA,sBAAc,EAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;IAEhE,iBAAE,CAAC,aAAa,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IAEzC,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC;IAE1C,OAAO,CAAC,GAAG,CACT,wCAAwC,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,UAAU,EAAE,CACrF,CAAC;AACJ,CAAC;AAAC,OAAO,KAAK,EAAE,CAAC;IACf,OAAO,CAAC,KAAK,CACX,WAAW,EACX,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CACvD,CAAC;IACF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC","sourcesContent":["#!/usr/bin/env node\n\nimport fs from \"node:fs\";\nimport path from \"node:path\";\nimport { Command } from \"commander\";\nimport { version } from \"../package.json\";\nimport { generateClient } from \"./index\";\n\nconst program = new Command();\n\nprogram\n  .name(\"openapi-fetch-gen\")\n  .description(\n    \"Generate TypeScript API client from OpenAPI TypeScript definitions\",\n  )\n  .version(version)\n  .requiredOption(\n    \"-i, --input <path>\",\n    \"path to input OpenAPI TypeScript definition file\",\n  )\n  .option(\n    \"-o, --output <path>\",\n    \"path to output generated client file\",\n    \"./client.ts\",\n  )\n  .parse(process.argv);\n\nconst options = program.opts();\n\ntry {\n  const start = new Date().getTime() / 1000.0;\n\n  const inputPath = path.resolve(options[\"input\"]);\n  const outputPath = path.resolve(options[\"output\"]);\n\n  const relativeInputPath = path\n    .relative(path.dirname(outputPath), inputPath)\n    .replace(/\\\\/g, '/')\n    .replace(/\\\\.ts$/, '')\n    .replace(/^([^\\\\.])/, './$1');\n\n  if (!fs.existsSync(inputPath)) {\n    console.error(`Error: Input file not found: ${inputPath}`);\n    process.exit(1);\n  }\n\n  const clientCode = generateClient(inputPath, relativeInputPath);\n\n  fs.writeFileSync(outputPath, clientCode);\n\n  const end = new Date().getTime() / 1000.0;\n\n  console.log(\n    `üèÅ Successfully generated client at [${(end - start).toFixed(2)}ms]: ${outputPath}`,\n  );\n} catch (error) {\n  console.error(\n    \"üòµ Error:\",\n    error instanceof Error ? error.message : String(error),\n  );\n  process.exit(1);\n}\n"]}